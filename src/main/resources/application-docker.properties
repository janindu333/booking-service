eureka.url=http://eureka:password@discovery-server:8761/eureka
eureka.client.serviceUrl.defaultZone=${eureka.url}
spring.application.name=booking-service

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://host.docker.internal:3306/booking-service?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.hibernate.ddl-auto=update
logging.level.org.hibernate.SQL=debug

server.port=8084

# Kafka Configuration
# Use Kubernetes DNS to resolve Kafka service
spring.kafka.bootstrap-servers=kafka-service.default.svc.cluster.local:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Spring Kafka Consumer (Optional, if using consumers)
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=booking-service-group

eureka.instance.prefer-ip-address=false
eureka.instance.hostname=booking-service.default.svc.cluster.local

